{"version":3,"sources":["Noise.js","Context.js","noisyLine.js","Tree.js","Hill.js","Cloud.js","Colour.js","Sun.js","App.js","serviceWorker.js","index.js"],"names":["Noise","length","range","arguments","undefined","radius","Object","classCallCheck","this","noise","OpenSimplexNoise","Date","now","a","r","start","findStart","reset","value","r1","r2","Math","PI","y1","y2","y","theta","atan2","prev","get","smallestAngle","Number","MAX_SAFE_INTEGER","bestStart","i","cur","angle","abs","step","x","cos","sin","scale","noise2D","Context","ctx","noisyLine","x1","x2","f","sqrt","getAngle","noise2","floor","amplitude","setRange","frequency","setRadius","cx","cy","radians","ax","ay","callback","strokeStyle","yOffset","moveTo","n","_x","_y","_this$rotate","rotate","lineTo","Tree","size","colour","iterations","min","max","branchAngleA","random","fillStyle","tree","limit","save","translate","fillRect","y0","size0","angle0","restore","size1","angle1","_draw","Hill","width","height","line","beginPath","draw","randomRange","fill","closePath","Cloud","imgData","getImageData","data","nt","zoom","putImageData","Colour","h","s","l","g","b","hue2rgb","p","q","t","_this$getRGB","getRGB","concat","c","percent","lighten","d","hex","charAt","substr","values","split","parseInt","toString","fromRGB","Sun","grd","createRadialGradient","addColorStop","arc","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","pixelSize","lenth","drawing","updateWindowDimensions","bind","assertThisInitialized","startts","getTS","_this2","canvas","refs","set","getContext","rAF","requestAnimationFrame","updateAnimationState","window","addEventListener","_this3","_window","innerWidth","innerHeight","setState","nextFrame","cancelAnimationFrame","removeEventListener","ts","clearFrame","drawLine","_this4","_this$state","createLinearGradient","getTime","_this$state2","interval","hill","hillCount","_this$state3","react_default","createElement","ref","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c910e212.chunk.js","sourcesContent":["import OpenSimplexNoise from 'open-simplex-noise';\r\n\r\nclass Noise {\r\n    constructor(length, range = [1, 100], radius = 2) {\r\n\tthis.noise = new OpenSimplexNoise(Date.now());\r\n\tthis.length = length;\r\n\tthis.a = 0;\r\n\tthis.range = range;\r\n\tthis.r = radius;\r\n\tthis.start = 0;\r\n\t\r\n\tthis.findStart();\r\n\tthis.reset();\r\n    }\r\n\r\n    setRange(range) {\r\n\tthis.range = range;\r\n    }\r\n\r\n    setRadius(radius) {\r\n\tthis.radius = radius;\r\n    }\r\n\r\n    scale( value, r1, r2 ) { \r\n\treturn (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\r\n    }\r\n\r\n    reset() {\r\n\tthis.a = this.start;\r\n    }\r\n\r\n    step() {\r\n\treturn (Math.PI * 2) / this.length;\r\n    }\r\n\r\n    angle(y1, y2) {\r\n\tconst y = y1 - y2;\r\n\tconst x = 10;\r\n\tlet theta = Math.atan2(y, x);\r\n\ttheta *= 180 / Math.PI;\r\n\r\n\treturn theta;\r\n    }\r\n\r\n    findStart() {\r\n\tlet prev = this.get();\r\n\r\n\tlet smallestAngle = Number.MAX_SAFE_INTEGER;\r\n\tlet bestStart = 0;\r\n\r\n\tfor (let i = 0 ; i < this.length ; i++) {\r\n\t    const cur = this.get();\r\n\t    const angle = Math.abs(this.angle(prev, cur));\r\n\r\n\t    if (angle < smallestAngle) {\r\n\t\tsmallestAngle = angle;\r\n\t\tbestStart = this.a  - (this.step() * 2);\r\n\t    }\r\n\r\n\t    prev = cur;\r\n\t}\r\n\r\n\tthis.start = bestStart;\r\n    }\r\n\r\n    get() {\r\n\tconst step = this.step();\r\n\t\r\n\tconst { r, a } = this;\r\n\tconst x = r * Math.cos(a);\r\n\tconst y = r * Math.sin(a);\r\n\r\n\tthis.a += step;\r\n\r\n\treturn this.scale(this.noise.noise2D(x, y), [0, 1], this.range);\r\n    }\r\n}\r\n\r\n\r\nexport default Noise;\r\n","class Context {\n    static get() {\n\treturn this.ctx;\n    }\n\n    static set(ctx) {\n\tthis.ctx = ctx;\n    }\n}\n\nContext.ctx = null;\n\nexport default Context;\n","import Noise from './Noise';\r\nimport Context from './Context';\r\n\r\nclass noisyLine {\r\n    constructor(x1, y1, x2, y2, a = 100, f = 2) {\r\n\tconst x = x1 - x2;\r\n\tconst y = y1 - y2;\r\n\r\n\tthis.length = Math.abs(Math.sqrt( x*x + y*y ));\r\n\tthis.angle = this.getAngle(x1, y1, x2, y2);\r\n\r\n\tthis.noise = new Noise(this.length, [0, a], f);\r\n\tthis.noise2 = new Noise(this.length, [0, Math.floor(a/5)], Math.floor(f * 5));\r\n\r\n\tthis.x1 = x1;\r\n\tthis.y1 = y1;\r\n\tthis.x2 = x2;\r\n\tthis.y2 = y2;\r\n    }\r\n\r\n    setAmplitude(amplitude) {\r\n\tthis.noise.setRange([0, amplitude]);\r\n    }\r\n\r\n    setFrequency(frequency) {\r\n\tthis.noise.setRadius(frequency);\r\n    }\r\n\r\n    getAngle(x1, y1, x2, y2) {\r\n\tconst y = y1 - y2;\r\n\tconst x = x1 - x2;\r\n\tconst theta = Math.atan2(x, y) * (180 /Math.PI);\r\n\r\n\treturn theta + 90;\r\n    }\r\n\r\n    rotate(cx, cy, x, y, angle) {\r\n\tconst radians = (Math.PI / 180) * angle;\r\n        const cos = Math.cos(radians);\r\n        const sin = Math.sin(radians);\r\n\t\r\n        const ax = (cos * (x - cx)) + (sin * (y - cy)) + cx;\r\n        const ay = (cos * (y - cy)) - (sin * (x - cx)) + cy;\r\n\t\r\n\treturn {ax: ax, ay: ay};\r\n    }\r\n    \r\n    draw(callback = null) {\r\n\tconst ctx = Context.get();\r\n\tconst { noise, noise2, x1, y1, x2, y2 } = this;\r\n\tconst y = y1;\r\n\r\n\tconst xOffset = Math.floor((x2 - x1) / 4);\r\n\r\n\tctx.strokeStyle = '#ffffff';\r\n\r\n\tlet yOffset = null;\r\n\tnoise.reset();\r\n\tctx.moveTo(x1, y1);\r\n\t\r\n\tfor (let x = 0 ; x <= this.length; x++) {\r\n\t    const n = noise.get() + noise2.get();\r\n\t    yOffset = yOffset || n;\r\n\t    \r\n\t    const _x = x + x1;\r\n\t    const _y = (y + n) - yOffset;\r\n\t    const { ax, ay } = this.rotate(x1, y1, _x, _y, this.angle);\r\n\t    ctx.lineTo(ax, ay);\r\n\r\n\t    if (callback !== null) {\r\n\t\tcallback(ax, ay);\r\n\t    }\r\n\t}\r\n    }\r\n}\r\n\r\nexport default noisyLine;\r\n","import Context from './Context';\n\nclass Tree {\n    constructor(x, y, size = 200, colour = '#000000', iterations = 10) {\n\tthis.x = x - (size / 2);\n\tthis.y = y;\n\tthis.size = size;\n\tthis.colour = colour;\n\tthis.iterations = iterations;\n    }\n    \n    _draw() {\n\tconst ctx = Context.get();\n\tconst { colour } = this;\n\t\n\tconst randomRange = (min, max) => {\n\t    return min + Math.random() * (max - min);\n\t};\n\n\tconst angMod = 4;\n\tconst branchAngleA = randomRange(-Math.PI / 3, -Math.PI / angMod);\n\n\tif (colour !== null) {\n\t    ctx.fillStyle = colour;\n\t}\n\t\n\tconst tree = (x, y, size, angle, limit) => {\n\t    ctx.save();\n\t    ctx.translate(x, y);\n\t    ctx.rotate(angle);\n\t    ctx.fillRect(0, 0, size, -size);\n\n\t    // left branch\n\t    const x0 = 0;\n\t    const y0 = -size;\n\t    const size0 = Math.abs(Math.cos(branchAngleA) * size);\n\t    const angle0 = branchAngleA;\n\n\t    if (limit > 0) {\n\t\ttree(x0, y0, size0, angle0, limit - 1);\n\t    } else {\n\t\tctx.save();\n\t\tctx.translate(x0, y0);\n\t\tctx.rotate(angle0);\n\t\tctx.fillRect(0, 0, size0, -size0);\n\t\tctx.restore();\n\t    }\n\n\t    // right branch\n\t    const x1 = x0 + Math.cos(angle0) * size0;\n\t    const y1 = y0 + Math.sin(angle0) * size0;\n\t    const size1 = Math.abs(Math.sin(branchAngleA) * size);\n\t    const angle1 = angle0 + Math.PI / 2;\n\n\t    if (limit > 0) {\n\t\ttree(x1, y1, size1, angle1, limit - 1);\n\t    } else {\n\t\tctx.save();\n\t\tctx.translate(x1, y1);\n\t\tctx.rotate(angle1);\n\t\tctx.fillRect(0, 0, size1, -size1);\n\t\tctx.restore();\n\t    }\n\n\t    ctx.restore();\n\t};\n\n\tconst { x, y, size, iterations } = this;\n\ttree(x, y, size, 0, iterations);\n    }\n\n    draw() {\n\tfor (let i = 0 ; i < 5; i++) {\n\t    this._draw();\n\t}\n    }\n}\n\nexport default Tree;\n","import noisyLine from './noisyLine';\nimport Context from './Context';\nimport Tree from './Tree';\n\n\nclass Hill {\n    constructor(width, height, y, colour) {\n\tthis.width = width;\n\tthis.height = height;\n\tthis.y = y;\n\tthis.colour = colour;\n    }\n\n    draw() {\n\tconst ctx = Context.get();\n\tconst { width, height, y, colour } = this;\n\t\n\tconst line = new noisyLine(0, y, width, y, 50, 1);\n\n\tctx.beginPath();\n\tctx.fillStyle = colour;\n\tline.draw((x, y) => {\n\t    const randomRange = (min, max) => {\n\t\treturn min + Math.random() * (max - min);\n\t    };\n\t    \n\t    if (randomRange(0, 100) > 95) {\n\t\tconst tree = new Tree(x, y + 3, randomRange(2, 5), null, Math.floor(randomRange(4, 6)));\n\t\ttree.draw();\n\t    }\n\t});\n\tctx.lineTo(width, height);\n\tctx.lineTo(0, height);\n\tctx.lineTo(0, y);\n\tctx.fill();\n\tctx.closePath();\n    }\n}\n\nexport default Hill;\n","import OpenSimplexNoise from 'open-simplex-noise';\nimport Context from './Context';\n\nclass Cloud {\n    constructor(x, y, width, height) {\n\tthis.noise = new OpenSimplexNoise(Date.now());\n\tthis.x = x;\n\tthis.y = y;\n\tthis.height = height;\n\tthis.width = width;\n    }\n\n    draw() {\n\tconst ctx = Context.get();\n\tconst { x, y, height, width } = this;\n\tconst { noise } = this;\n\n\tconst imgData = ctx.getImageData(x, y, width, height);\n\tconst data = imgData.data;\n\n\tconst scale = ( value, r1, r2 )  => { \n\t    return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n\t};\n\n\tlet i = 0;\n\tconst zoom = 250;\n\tconst nzoom = zoom / 4;\n\tconst nscale = 15;\n\tfor (let _y = 0; _y < height ; _y++) {\n\t    for (let _x = 0 ; _x < width ; _x++) {\n\t\tconst cloudMod = 210;\n\t\tconst n1 = scale(noise.noise2D(_x / zoom, _y / zoom), [-1, 1], [0, 255 + cloudMod]) - cloudMod;\n\t\tconst n2 = scale(noise.noise2D(_x / nzoom, _y / nzoom), [-1, 1], [-nscale, nscale]);\n\t\tlet nt = n1 + n2;\n\t\tconst cutoff = 50;\n\n\t\tif (nt > cutoff) {\n\t\t    nt = scale(nt, [cutoff, 255], [0, 255]); \n\t\t    data[i+0] = scale(nt, [0, 255], [data[i+0], 255]);\n\t\t    data[i+1] = scale(nt, [0, 255], [data[i+1], 255]);\n\t\t    data[i+2] = scale(nt, [0, 255], [data[i+2], 255]);\n\t\t\n\t\t    data[i+3] = 255;\n\t\t}\n\n\t\ti += 4;\n\t    }\n\t}\n\t\n\tctx.putImageData(imgData, x, y);\n    }\n}\n\nexport default Cloud;\n","class Colour {\n    constructor(h, s, l) {\n\tthis.h = h;\n\tthis.s = s;\n\tthis.l = l;\n    }\n    \n    static fromRGB(r, g, b) {\n\tr /= 255;\n\tg /= 255;\n\tb /= 255;\n\n\tconst max = Math.max(r, g, b), min = Math.min(r, g, b);\n\tlet h, s, l = (max + min) / 2;\n\n\tif (max == min) {\n\t    h = s = 0; // achromatic\n\t} else {\n\t    const d = max - min;\n\t    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n\t    switch (max) {\n\t    case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t    case g: h = (b - r) / d + 2; break;\n\t    case b: h = (r - g) / d + 4; break;\n\t    }\n\n\t    h /= 6;\n\t}\n\n\treturn new Colour(h, s, l);\n    }\n\n    static fromHEX(hex) {\n        if (hex.charAt(0) === '#') {\n            hex = hex.substr(1);\n        }\n\t\n        if ((hex.length < 2) || (hex.length > 6)) {\n            return false;\n        }\n\t\n        let values = hex.split('');\n        let r;\n        let g;\n        let b;\n\n        if (hex.length === 2) {\n            r = parseInt(values[0].toString() + values[1].toString(), 16);\n            g = r;\n            b = r;\n        } else if (hex.length === 3) {\n            r = parseInt(values[0].toString() + values[0].toString(), 16);\n            g = parseInt(values[1].toString() + values[1].toString(), 16);\n            b = parseInt(values[2].toString() + values[2].toString(), 16);\n        } else if (hex.length === 6) {\n            r = parseInt(values[0].toString() + values[1].toString(), 16);\n            g = parseInt(values[2].toString() + values[3].toString(), 16);\n            b = parseInt(values[4].toString() + values[5].toString(), 16);\n        } else {\n            return false;\n        }\n\n\treturn Colour.fromRGB(r, g, b);\n    }\n\n\n    getRGB() {\n\tconst { h, s, l } = this;\n\tlet r, g, b;\n\n\tif (s == 0) {\n\t    r = g = b = l; // achromatic\n\t} else {\n\t    function hue2rgb(p, q, t) {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1/6) return p + (q - p) * 6 * t;\n\t\tif (t < 1/2) return q;\n\t\tif (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\t\treturn p;\n\t    }\n\n\t    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t    var p = 2 * l - q;\n\n\t    r = hue2rgb(p, q, h + 1/3);\n\t    g = hue2rgb(p, q, h);\n\t    b = hue2rgb(p, q, h - 1/3);\n\t}\n\n\treturn { r: r * 255, g: g * 255, b: b * 255 };\n    }\n\n    toString() {\n\tconst { r, g, b } = this.getRGB();\n\t\n\treturn `rgb(${r}, ${g}, ${b})`;\n    }\n\n    valueOf() {\n\tconst { h, s , l } = this;\n\treturn {h: h, s: s, l: l};\n    }\n\n    add(c) {\n\tlet h = (this.h + c.h) / 2;\n\n\twhile ( this.h > 360 ) {\n\t    this.h -= 360;\n\t}\n\n\tconst s = (this.s + c.s) / 2;\n\tconst l = (this.l + c.l) / 2;\n\n\treturn new Colour(h, s, l);\n    }\n\n    lighten(percent) {\n\tconst { h, s } = this;\n\tconst l = Math.max(Math.min(this.l + (percent / 100), 1), 0);\n\treturn new Colour(h, s, l);\n    }\n\n    darken(percent) {\n\treturn this.lighten(-percent);\n    }\n}\n\nexport default Colour;\n","import Context from './Context';\n\nclass Sun {\n    constructor(x, y, size) {\n\tthis.x = x;\n\tthis.y = y;\n\tthis.size = size;\n    }\n\n    draw() {\n\tconst ctx = Context.get();\n\tconst { x, y, size } = this;\n\n\tconst rad = size / 2;\n\n\tconst grd = ctx.createRadialGradient(x, y, 0, x, y, size);\n      \n\tgrd.addColorStop(0, 'rgba(255, 255, 255, 1.000)');\n\tgrd.addColorStop(0.75, 'rgba(255, 250, 230, 1.000)');\n\tgrd.addColorStop(1, 'rgba(255, 255, 255, 0.000)');\n      \n\tctx.fillStyle = grd;\n\n\tctx.beginPath();\n\tctx.arc(x, y, size, 0, 2 * Math.PI);\n\tctx.fill();\n    }\n}\n\nexport default Sun;\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Noise from './Noise';\r\nimport Hill from './Hill';\r\nimport Cloud from './Cloud';\r\nimport Colour from './Colour';\r\nimport Sun from './Sun';\r\n\r\nimport Context from './Context';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n\tsuper(props);\r\n\r\n\tthis.state = {\r\n\t    pixelSize: 8,\r\n\t    height: 500,\r\n\t    width: 150,\r\n\t    lenth: 100,\r\n\t    range: 20,\r\n\t    yOffset: null\t    \r\n\t};\r\n\t\r\n\tthis.drawing = false;\r\n\tthis.ctx = null;\r\n\tthis.line = \r\n\r\n\tthis.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n\tthis.startts = this.getTS();\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n\tconst canvas = this.refs.canvas;\r\n\tContext.set(canvas.getContext(\"2d\"));\r\n\r\n\t\r\n\tthis.rAF = requestAnimationFrame(() => this.updateAnimationState());\r\n\tthis.updateWindowDimensions();\r\n\twindow.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n    \r\n    updateWindowDimensions() {\r\n\tconst { innerWidth, innerHeight } = window;\r\n\tconst { range } = this.state;\r\n\r\n\tconst length = Math.floor(innerWidth / 2);\r\n\tconst noise = new Noise(length, [-range, range]);\r\n\t\r\n\tthis.setState({ width: innerWidth, height: innerHeight, noise: noise, length: length }, () => this.nextFrame());\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n\tcancelAnimationFrame(this.rAF);\r\n\twindow.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateAnimationState() {\r\n\tthis.ts = this.getTS();\r\n\tthis.clearFrame();\r\n\r\n\tthis.drawLine();\r\n\t\t\r\n\t//this.nextFrame();\r\n    }\r\n\r\n    nextFrame() {\r\n\tthis.rAF = requestAnimationFrame(() => this.updateAnimationState());\r\n    }\r\n\r\n    clearFrame() {\r\n\tconst { width, height } = this.state;\r\n\tconst ctx = Context.get();\r\n\r\n\tconst light = /*'#f3d091';//*/'#b9c3d0';\r\n\tconst dark = /*'#7e818f';//*/'#678bbb';\r\n\r\n\tconst grd = ctx.createLinearGradient(0, height, 0, 0);\r\n\tgrd.addColorStop(0, light);\r\n\tgrd.addColorStop(.4, light);\r\n\tgrd.addColorStop(.75, dark);\r\n\tgrd.addColorStop(1, dark);\r\n\t\r\n\tctx.fillStyle = grd;\r\n\tctx.fillRect(0, 0, width, height);\r\n    }\r\n\r\n    getTS() {\r\n\tconst date = new Date();\r\n\t\r\n\treturn date.getTime();\r\n    }\r\n\r\n    scale( value, r1, r2 ) { \r\n\treturn ( value - r1[ 0 ] ) * ( r2[ 1 ] - r2[ 0 ] ) / ( r1[ 1 ] - r1[ 0 ] ) + r2[ 0 ];\r\n    }\r\n\r\n    drawLine() {\r\n\tconst { width, height } = this.state;\r\n\tconst interval = Math.floor(height / 10);\r\n\r\n\tconst cloud = new Cloud(0, 0, width, height);\r\n\tcloud.draw();\r\n\r\n\tconst sun = new Sun(200, 200, 100);\r\n\tsun.draw();\r\n\r\n\tconst hillCount = 4;\r\n\r\n\tlet colour = Colour.fromRGB(106, 121, 101);\r\n\t\t\r\n\tfor (let i = hillCount; i > 0; i--) {\r\n\t    let mul = (((hillCount * 2) + 1) - i) + 1;\r\n\t    \r\n\t    const hill = new Hill(width, height, interval * mul, colour);\r\n\t    colour = colour.lighten(-10);\r\n\t    \r\n\t    hill.draw();\r\n\t}\r\n    }\r\n        \r\n    render() {\r\n\tconst { width, height } = this.state;\r\n\r\n        return (\r\n\t    <div>\r\n              <div>\r\n\t\t<canvas ref=\"canvas\" width={ width } height={ height } />\r\n              </div>\r\n            </div>\r\n\t);\t\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}